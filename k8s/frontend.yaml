apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-hdtlw
    field.cattle.io/publicEndpoints: '[{"addresses":["172.20.37.219"],"port":31090,"protocol":"TCP","serviceName":"alphacar-services:frontend-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-alphacar-services-frontend
  name: frontend
  selfLink: /apis/apps/v1beta2/namespaces/alphacar-services/deployments/frontend
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-alphacar-services-frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":8090,"dnsName":"frontend-nodeport","kind":"NodePort","name":"8090tcp310901","protocol":"TCP","sourcePort":31090}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-alphacar-services-frontend
    spec:
      affinity: {}
      containers:
      - args:
        - nginx
        - -g
        - daemon off;
        env:
        - name: BASE_URL
          value: http://bc.tarchcloud.com:30000
        - name: IPFS_URL
          value: http://bc.tarchcloud.com:32080
        image: alphacar/frontend
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8090
          name: 8090tcp310901
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
