swagger: "2.0"

info:
  title: "AlphaCar Blockchain API"
  version: "1.0"

consumes:
  - application/json
produces:
  - application/json

basePath: /

paths:
  /:
    get:
      tags: [INDEX]
      summary: basic info of alphacar
      description: basic info of alphacar
      produces:
        - text/plain
      responses:
        200:
          description: basic info of alphacar response
          schema:
            type: string

  /greeting/{name}:
    get:
      tags: [INDEX]
      summary: Generate greeting
      description: Generates a greeting message.
      produces:
        - text/plain
      parameters:
        - name: name
          in: path
          description: Name of the person to greet.
          required: true
          type: string
      responses:
        200:
          description: greeting response
          schema:
            type: string
          examples:
            "text/plain": "Hello John. This is AlphaCar.IO."

  /token/info:
    get:
      tags: [Token]
      summary: get token info
      description: get token info
      produces:
        - application/json
      responses:
        200:
          description: token info response
          schema:
            $ref: "#/definitions/TokenInfoResult"

  /token/balance_of/{address}:
    get:
      tags: [Token]
      summary: get token balance
      description: get token balance
      produces:
        - application/json
      parameters:
        - name: address
          in: path
          description: the address string.
          required: true
          type: string
      responses:
        200:
          description: balance response
          schema:
            $ref: "#/definitions/TokenBalanceResult"

  /ubi_info/latest:
    get:
      tags: [UBI Info]
      summary: get latest ubi info
      description: get latest ubi info
      produces:
        - application/json
      responses:
        200:
          description: infos response
          schema:
            $ref: "#/definitions/UBIInfoResult"

  /ubi_info/index/{ubi_code}:
    get:
      tags: [UBI Info]
      summary: get ubi info
      description: get ubi info by ubi code
      produces:
        - application/json
      parameters:
        - name: ubi_code
          in: path
          description: the ubi_code string.
          required: true
          type: string
      responses:
        200:
          description: infos response
          schema:
            $ref: "#/definitions/UBIInfoResult"

  /ubi_info/list:
    get:
      tags: [UBI Info]
      summary: get ubi infos
      description: get ubi infos with search conditions
      produces:
        - application/json
      parameters:
        - name: search_type
          in: query
          description: the search_type string.
          required: false
          type: string
        - name: search_txt
          in: query
          description: the search_txt string.
          required: false
          type: string
        - name: page_size
          in: query
          description: the page size.
          required: false
          type: "integer"
          format: "int32"
        - name: page
          in: query
          description: the page num.
          required: false
          type: "integer"
          format: "int32"
      responses:
        200:
          description: UBIInfos response
          schema:
            $ref: "#/definitions/UBIInfoListResult"

  /gateio/ticker/{ticker_pair}:
    get:
      tags: [Gate.IO]
      summary: get ticker info
      description: get ticker info by ticker_pair
      produces:
        - application/json
      parameters:
        - name: ticker_pair
          in: path
          description: the ticker_pair string.
          required: true
          type: string
      responses:
        200:
          description: ticker response
          schema:
            $ref: "#/definitions/TickerResult"

definitions:

  TokenInfoResult:
    type: "object"
    properties:
      error_code:
        type: "integer"
        format: "int32"
      error_msg:
        type: "string"
      data:
        type: "object"
        properties:
          symbol:
            type: "string"
          name:
            type: "string"
          decimals:
            type: "integer"
            format: "int32"
          totalSupply:
            type: "number"
            format: "double"
          owner:
            type: "string"

  TokenBalanceResult:
    type: "object"
    properties:
      error_code:
        type: "integer"
        format: "int32"
      error_msg:
        type: "string"
      data:
        type: "object"
        properties:
          balance:
            type: "number"
            format: "double"
          balance_fmt:
            type: "string"

  User:
    type: "object"
    properties:
      name:
        type: "string"
      driving_license:
        type: "string"

  CarInfo:
    type: "object"
    properties:
      car_type:
        type: "string"
      vin_code:
        type: "string"

  UBIInfo:
    type: "object"
    properties:
      ubi_code:
        type: "string"
      timestamp:
        type: "integer"
        format: "int64"
      user:
        $ref: "#/definitions/User"
      carinfo:
        $ref: "#/definitions/CarInfo"
      start_date:
        type: "string"
      end_date:
        type: "string"
      price:
        type: "number"
        format: "double"

  UBIInfoResult:
    type: "object"
    properties:
      error_code:
        type: "integer"
        format: "int32"
      error_msg:
        type: "string"
      data:
        $ref: "#/definitions/UBIInfo"

  UBIInfoListResult:
    type: "object"
    properties:
      error_code:
        type: "integer"
        format: "int32"
      error_msg:
        type: "string"
      data:
        type: "object"
        properties:
          total_count:
            type: "integer"
            format: "int32"
          lst:
            type: "array"
            items:
              $ref: "#/definitions/UBIInfo"

  Ticker:
    type: "object"
    properties:
      quoteVolume:
        type: "number"
        format: "double"
      baseVolume:
        type: "number"
        format: "double"
      highestBid:
        type: "number"
        format: "double"
      high24hr:
        type: "number"
        format: "double"
      last:
        type: "number"
        format: "double"
      lowestAsk:
        type: "number"
        format: "double"
      elapsed:
        type: "string"
      result:
        type: "boolean"
      low24hr:
        type: "number"
        format: "double"
      percentChange:
        type: "number"
        format: "double"


  TickerResult:
    type: "object"
    properties:
      error_code:
        type: "integer"
        format: "int32"
      error_msg:
        type: "string"
      data:
        $ref: "#/definitions/Ticker"
